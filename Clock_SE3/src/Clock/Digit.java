/*
 * Single digit for use in ClockFrame or DigitTestBed
 * Functions: incrementDigit, decrementDigit, setChar(char)
 */
package Clock;

/**
 * @author sbrown
 */
public class Digit extends javax.swing.JComponent implements bgi.TouchDigit, bgi.TouchListener {
 
    /*
     * Creates new form Digit
     */
    public Digit() {
        initComponents();
        this.digitLabel.setText("0");
    }
    
    /*
     * Start methods required by touchDigit
     */
    
    public void setDigit(int i){
    }

    public int getDigit(){
        return Integer.valueOf(this.digitLabel.getText());
    }

    public void setText(String[] strings){
        
    }

    public String[] getText(){
        String[] list = {" "};
        return list;
    }

    public void setTextAlignment(int i){
        
    }

    public int getTextAlignment(){
        int align = 0;
        return align;
    }

    public void addTouchListener(bgi.TouchListener tl){
        
    }

    public void removeTouchListener(bgi.TouchListener tl){
        
    }
    
    /*
     * Start methods required by touchListener
     */
    public void touchInitiated(bgi.TouchEvent te){
        
    }

    public void touchReleased(bgi.TouchEvent te){
        
    }

    public void touchCancelled(bgi.TouchEvent te){
        
    }
    
    /*
     * End of required methods
     */
    
    /*
     * If current value is numerical, increment by mod(10) of current
     * displayed value. Otherwise, set digit to 0;
     */
    public void incrementDigit() {
        char currentChar = this.digitLabel.getText().charAt(0);
        if(Character.isDigit(currentChar)){
            int nextDigit = (Character.getNumericValue(currentChar) + 1) % 10;
            this.digitLabel.setText(String.valueOf(nextDigit));
        } else {
            this.digitLabel.setText("0");
        }
    }
    
    /*
     * If current value is numerical, decrement by mod(10) of current
     * displayed value. Otherwise, set digit to 0;
     */
    public void decrementDigit() {
        char currentChar = this.digitLabel.getText().charAt(0);
        
        if(Character.isDigit(currentChar)) {
            // java modulo function includes +- the divisor, so 9 is added
            // to emulate decrementing
            int nextDigit = (Character.getNumericValue(currentChar) + 9) % 10;
            this.digitLabel.setText(String.valueOf(nextDigit));
        } else {
            this.digitLabel.setText("0");
        }
    }
    
    public void setChar(char in) {
        this.digitLabel.setText(String.valueOf(in));
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        digitCell = new java.awt.Panel();
        digitLabel = new javax.swing.JLabel();

        digitCell.setBackground(new java.awt.Color(0, 0, 0));
        digitCell.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        digitLabel.setFont(new java.awt.Font("Tahoma", 0, 120)); // NOI18N
        digitLabel.setForeground(new java.awt.Color(51, 255, 0));
        digitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        digitLabel.setText("3");
        digitLabel.setToolTipText("");

        javax.swing.GroupLayout digitCellLayout = new javax.swing.GroupLayout(digitCell);
        digitCell.setLayout(digitCellLayout);
        digitCellLayout.setHorizontalGroup(
            digitCellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(digitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        digitCellLayout.setVerticalGroup(
            digitCellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(digitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(digitCell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(digitCell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Panel digitCell;
    private javax.swing.JLabel digitLabel;
    // End of variables declaration//GEN-END:variables
}
